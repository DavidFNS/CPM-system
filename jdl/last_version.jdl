entity Customers {
    username String required unique
    password String required
    phoneNumber String required
    balance Double required min(0)
}

entity Organization {
    name String required unique
    orgOwnerName String
}

entity Groups {
    name String required
    groupOwnerName String
}

entity Services {
    name String required
    price Double required min(10000)
    startedPeriod LocalDate required
    periodType PeriodType required
    countPeriod Integer required min(1)
}

entity Payment {
    paidMoney Double required min(0)
    paymentForPeriod Double required min(10000)
    isPayed Boolean required
    startedPeriod LocalDate required
    finishedPeriod LocalDate
}

entity CustomerTelegram {
    isBot Boolean
    firstname String
    lastname String
    username String
    telegramId Long
    phoneNumber String
    step Integer
    canJoinGroups Boolean
    languageCode String
    isActive Boolean
}

entity PaymentHistory{
    organizationName String
    GroupName String
    serviceName String
    sum Double
    createdAt LocalDate
}

enum PeriodType {
    ONETIME, DAY, WEEK, MONTH, YEAR
}

relationship ManyToMany {
    Groups{customers} to Customers{groups}
    Services{groups} to Groups{services}
}

relationship ManyToOne {
    Payment{customer} to Customers
    Payment{service} to Services
    PaymentHistory{customer} to Customers
}

relationship OneToMany {
    Organization{groups} to Groups
}

relationship OneToOne {
    CustomerTelegram{user} to User
    Customers{user} to User
}

paginate Payment, Customers, Groups with pagination

service all with serviceImpl
dto * with mapstruct
